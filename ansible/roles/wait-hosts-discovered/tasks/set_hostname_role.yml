---
# Set hostname and role

- name: Identify the host bmc address
  set_fact:
    host_bmc: "{{ (discovered_host.inventory | from_json).bmc_address }}"
  when: lab in cloud_labs

- name: Identify the host identifing data
  set_fact:
    host_interfaces: "{{ (discovered_host.inventory | from_json).interfaces }}"
    host_id: "{{ discovered_host.id }}"

- name: Identify the hostname and role via mac address
  set_fact:
    host_name: "{{ item.0 }}"
    host_role: "{{ hostvars[item.0]['role'] }}"
  when:
  - lab in rh_labs
  - hostvars[item.0]['lab_mac'] == item.1.mac_address
  loop: "{{ inventory_nodes | product(host_interfaces) | list }}"
  no_log: true

- name: Identify the hostname and role via bmc address
  set_fact:
    host_name: "{{ item }}"
    host_role: "{{ hostvars[item]['role'] }}"
  when:
  - lab in cloud_labs
  - hostvars[item]['bmc_address'] == host_bmc
  loop: "{{ inventory_nodes }}"
  loop_control:
    label: "{{ hostvars[item]['bmc_address'] }}"

- name: Prepare hostname and role for {{ host_name }}
  set_fact:
    host:
      id: "{{ host_id }}"
      hostname: "{{ host_name }}"
      role: "{{ host_role }}"
  when: host_name is defined or host_role is defined

- name: Set hostname and role for {{ host_name }}
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}"
    method: PATCH
    body_format: json
    status_code: [201]
    return_content: true
    body: {"hosts_names": ["{{ host }}"], "hosts_roles": ["{{ host }}"]}
